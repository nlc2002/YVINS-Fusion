%YAML:1.0
---
#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2  

imu_topic: "/camera/imu"
image0_topic: "/camera/left/image_raw/raw"
image1_topic: "/camera/right/image_raw/raw"
output_path: "/home/nlc20/output/"
yolo_topic: "/yolo"
mask_topic: "/mask"
yolo_freq: 5        # Hz
yolo_threshold: 0.35
yolo_show: 1        # publish yolo image as topic

cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 1280
image_height: 1024
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 0   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data:    [1.0000000000000000, 0.000000000000000, 0.000000000000000, -0.160580000000000,
             0.000000000000000, 1.000000000000000, 0.000000000000000, 0.820870000000000,
             0.000000000000000, 0.000000000000001, 1.000000000000001, -0.062350100001200,
             0.0, 0.0, 0.0, 1.0]
#    1.000000000000000                   0                   0  -0.160580000000000
#                    0   1.000000000000000                   0   0.820870000000000
#                    0                   0   1.000000000000000  -0.062350000000000
#                    0                   0                   0   1.000000000000000

body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data:    [1.0000000000000000, 0.000000000000000, 0.000000000000000, 0.160900000000000,
             0.000000000000000, 1.000000000000000, 0.000000000000000, 0.821000000000000,
             0.000000000000001, 0.000000000000001, 1.000000000000001, -0.062547100001200,
             0.0, 0.0, 0.0, 1.0]
    # 1.000000000000000                   0                   0   0.160900000000000
    #             0   1.000000000000000                   0   0.821000000000000
    #             0                   0   1.000000000000000  -0.062547000000000
    #             0                   0                   0   1.000000000000000

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 150            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 0           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
# acc_n: 0.1          # accelerometer measurement noise standard deviation. #0.2   0.04
# gyr_n: 0.01         # gyroscope measurement noise standard deviation.     #0.05  0.004
# acc_w: 0.001         # accelerometer bias random work noise standard deviation.  #0.002
# gyr_w: 0.0001       # gyroscope bias random work noise standard deviation.     #4.0e-5
gyr_n: 2.4710787075320089e-03
gyr_w: 1.7963145905200798e-05
acc_n: 2.6848761610624401e-02
acc_w: 8.5216274964016023e-04
g_norm: 9.805         # gravity magnitude

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.00                             # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/dji/output/pose_graph/" # save and load path
save_image: 0                   # save image in pose graph for visualization prupose; you can close this function by setting 0 
